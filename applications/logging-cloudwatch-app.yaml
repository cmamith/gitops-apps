apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: logging-cloudwatch
  namespace: argocd
spec:
  project: default
  destination:
    server: https://kubernetes.default.svc
    namespace: logging
  source:
    repoURL: https://aws.github.io/eks-charts
    chart: aws-for-fluent-bit
    targetRevision: 0.1.28
    helm:
      values: |
        serviceAccount:
          create: true
          name: fluent-bit
          annotations:
            eks.amazonaws.com/role-arn: arn:aws:iam::177206615793:role/eks-fluentbit-cloudwatch

        namespaceOverride: logging

        daemonSet:
          enabled: true

        # Input: tail container logs
        input:
          tail:
            enabled: true
            path: /var/log/containers/*.log
            parser: docker
            memBufLimit: 10MB
            skipLongLines: On
            refreshInterval: 5
            readFromHead: Off

        # Enrich with Kubernetes metadata
        filters:
          kubernetes:
            enabled: true
            match: "*"
            kubeURL: https://kubernetes.default.svc
            mergeLog: On
            keepLog: Off

        # Disable built-in CloudWatch output (we'll use cloudwatch_logs with templating)
        cloudWatch:
          enabled: false

        # Add a replacement OUTPUT using cloudwatch_logs with a template
        extraOutputs: |
          [OUTPUT]
              Name                    cloudwatch_logs
              Match                   *
              region                  ap-southeast-1
              # Use the known-good keys:
              #   kubernetes['namespace_name'], kubernetes['labels']['app'], kubernetes['container_name'], kubernetes['pod_name']
              log_group_template      /eks/3tier/${kubernetes['namespace_name']}/${kubernetes['labels']['app']}-${kubernetes['container_name']}
              default_log_group_name  /eks/3tier/fallback
              log_stream_template     ${kubernetes['pod_name']}.${kubernetes['container_name']}
              auto_create_group       true

        # Small footprint + tolerations
        resources:
          requests: { cpu: 25m, memory: 96Mi }
          limits:   { cpu: 150m, memory: 192Mi }

        tolerations:
          - operator: Exists

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
